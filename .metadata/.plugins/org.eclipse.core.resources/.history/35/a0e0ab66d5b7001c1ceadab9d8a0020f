package PageObject;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.Keys;
import org.openqa.selenium.StaleElementReferenceException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;
import org.testng.Assert;

import Package.element_Highlight;


public class PageObject_license {

  element_Highlight eh= new element_Highlight();
  
  String AddedCode; 
  String licenseName;
  String searchlicense;

   @FindBy(xpath="/html/body/app-root/div[2]/div[2]/div/div/app-license/div/mat-card/mat-card-content/div[1]/div/form/div/div[1]/mat-form-field/div/div[1]/div/mat-select/div/div[2]")
   WebElement Active_Diactive;

   @FindBy(xpath="/html/body/app-root/div[2]/div[2]/div/div/app-license/div/mat-card/mat-card-content/div[1]/div/form/div/div[5]/button[1]")
   WebElement SearchButtom;

   @FindBy(xpath="/html/body/app-root/div[2]/div[2]/div/div/app-license/div/mat-card/mat-card-content/div[1]/div/form/div/div[2]/mat-form-field/div/div[1]/div/input")
   WebElement SearchName;
   
   @FindBy(xpath="/html/body/app-root/div[2]/div[2]/div/div/app-license/div/mat-card/mat-card-content/div[1]/div/form/div/div[4]/mat-form-field/div/div[1]/div/input")
   WebElement SearchCode;
   
   @FindBy(xpath="/html/body/app-root/div[2]/div[2]/div/div/app-license/div/mat-card/mat-card-content/div[2]/table/tbody/tr/td[5]/mat-checkbox/label/span[1]")
   WebElement checkbox;
   
   @FindBy(xpath="/html/body/app-root/div[2]/div[2]/div/div/app-license/div/mat-card/mat-card-header/div[2]/div/button[2]/span[1]/mat-icon")
   WebElement Save;
   
   @FindBy(xpath="/html/body/app-root/div[2]/div[2]/div/div/app-license/div/mat-card/mat-card-content/div[1]/div/form/div/div[5]/button[2]")
   WebElement Refresh;
   
   @FindBy(xpath="/html/body/app-root/div[2]/div[2]/div/div/app-license/div/mat-card/mat-card-content/div[2]/table/tbody/tr/td[4]")
   WebElement FirstCodetd;
   
   @FindBy(xpath="/html/body/app-root/div[2]/div[2]/div/div/app-license/div/mat-card/mat-card-content/div[2]/table/tbody/tr[1]/td[2]")
   WebElement Namelicense1th;
   
   @FindBy(xpath="/html/body/app-root/div[2]/div[2]/div/div/app-license/div/mat-card/mat-card-content/div[2]/table/tbody/tr[3]/td[2]")
   WebElement Namelicense3th;

   
   @FindBy(xpath="/html/body/app-root/div[2]/div[2]/div/div/app-license/div/mat-card/mat-card-content/div[2]/table/tbody/tr/td[2]")
   WebElement FirstNametd;



   
//اضافه کردن مچوز
   public void Addlicense( WebDriver driver ,String licenseCode ,String licenseCode2 ,String licenseCode3 ) throws InterruptedException {
	   
	   Actions action = new Actions(driver);
	   
//نمایش لیست غیر فعال
	   driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
	   eh.highlightElement(driver,Active_Diactive);
	   Thread.sleep(1000);
	   Active_Diactive.click();
	   eh.unhighlightLast(driver, Active_Diactive);
	   action
	   .sendKeys(Keys.UP)
	   .sendKeys(Keys.ENTER).perform();
	   Thread.sleep(1000);
	   action.click(SearchButtom).perform();
	   Thread.sleep(1000);




//نمایش لیست غیر فعال
   public void showDeActiveslicense( WebDriver driver ) throws InterruptedException {
	   Actions action = new Actions(driver);
	   driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
	   eh.highlightElement(driver,Active_Diactive);
	   Thread.sleep(1000);
	   Active_Diactive.click();
	   eh.unhighlightLast(driver, Active_Diactive);
	   action
	   .sendKeys(Keys.UP)
	   .sendKeys(Keys.ENTER).perform();
	   Thread.sleep(1000);
	   action.click(SearchButtom).perform();
	   Thread.sleep(1000);

   }
   
 //سرچ نام مجوز
   public void SearchLicenseName ( WebDriver driver ) throws InterruptedException {
	   
	   Actions action = new Actions(driver);
	 //نمایش لیست غیرفعال
	   driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
	   eh.highlightElement(driver,Active_Diactive);
	   Thread.sleep(1000);
	   Active_Diactive.click();
	   eh.unhighlightLast(driver, Active_Diactive);
	   action
	   .sendKeys(Keys.UP)
	   .sendKeys(Keys.ENTER).perform();
	   Thread.sleep(1000);
	   action.click(SearchButtom).perform();
	   Thread.sleep(1000);

	   
//سرچ مورد یکم لیست
	   licenseName=Namelicense1th.getText();
	   action
	   .click(SearchName)
	   .sendKeys(licenseName)
	   .click(SearchButtom)
	   .perform();
	   searchlicense=FirstNametd.getText();
	   Assert.assertEquals(licenseName, searchlicense);
	   action.click(Refresh).perform();
	 //نمایش لیست غیرفعال
	   driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
	   eh.highlightElement(driver,Active_Diactive);
	   Thread.sleep(1000);
	   Active_Diactive.click();
	   eh.unhighlightLast(driver, Active_Diactive);
	   action
	   .sendKeys(Keys.UP)
	   .sendKeys(Keys.ENTER).perform();
	   Thread.sleep(1000);
	   action.click(SearchButtom).perform();
	   Thread.sleep(1000);
	 //سرچ مورد سوم لیست
	   licenseName=Namelicense3th.getText();
	   action
	   .click(SearchName)
	   .sendKeys(licenseName)
	   .click(SearchButtom)
	   .perform();
	   Thread.sleep(1000);
	   searchlicense=FirstNametd.getText();
	   Thread.sleep(1000);
	   Assert.assertEquals(licenseName, searchlicense);
	   action.click(Refresh).perform();
      }   
   //غیر فعال کردن مجوز
   public void DeActiveLicense ( WebDriver driver ,String licenseCode ) throws InterruptedException {
	   Actions action = new Actions(driver);
	   //سرچ مجوز مورد نظر
	   action
	   .click(SearchCode)
	   .sendKeys(licenseCode)
	   .click(SearchButtom)
	   .perform();
	   Thread.sleep(2000);
	   //غیرفعال و ذخیره کردن
	   action
	   .click(checkbox)
	   .click(Save)
	   .click(Refresh)
	   .perform();
	   //نمایش لیست غیر فعال ها
	   driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
	   eh.highlightElement(driver,Active_Diactive);
	   Thread.sleep(1000);
	   Active_Diactive.click();
	   eh.unhighlightLast(driver, Active_Diactive);
	   action
	   .sendKeys(Keys.UP)
	   .sendKeys(Keys.ENTER).perform();
	   Thread.sleep(1000);
	   action.click(SearchButtom).perform();
	   Thread.sleep(1000);
	   //چک غیرفعال شدن تخصص
	   action
	   .click(SearchCode)
	   .sendKeys(licenseCode)
	   .click(SearchButtom)
	   .perform();
	   AddedCode=FirstCodetd.getText();   
   }

 }
